SELECT PRODUCT_ID, PRODUCT_NAME, SUM(QUANTITY) AS "Quantity Sold"
FROM A_PRODUCT_INFORMATION API
         NATURAL JOIN A_ORDER_ITEMS AOI
GROUP BY PRODUCT_ID, PRODUCT_NAME
HAVING SUM(QUANTITY) > 1000;

SELECT WAREHOUSE_ID, CATEGORY_ID, AVG(LIST_PRICE)
FROM A_PRODUCT_INFORMATION
         NATURAL JOIN A_INVENTORIES
WHERE WAREHOUSE_ID = 3
   OR WAREHOUSE_ID = 5
GROUP BY WAREHOUSE_ID, CATEGORY_ID
HAVING AVG(LIST_PRICE) > 200;

SELECT PRODUCT_NAME, WAREHOUSE_NAME, LIST_PRICE, QUANTITY_ON_HAND
FROM A_PRODUCT_INFORMATION
         NATURAL JOIN A_INVENTORIES
         NATURAL JOIN A_WAREHOUSES
WHERE WAREHOUSE_NAME = 'Sydney'
  AND QUANTITY_ON_HAND < 50
  AND LIST_PRICE BETWEEN 300 AND 400;

SELECT API.PRODUCT_ID, API.PRODUCT_NAME
FROM A_PRODUCT_INFORMATION API
         LEFT OUTER JOIN A_ORDER_ITEMS AOI
                         ON API.PRODUCT_ID = AOI.PRODUCT_ID
WHERE API.SUPPLIER_ID = 103082
  AND API.PRODUCT_NAME LIKE 'Desk%'
ORDER BY AOI.ORDER_ID;

SELECT CUST_FIRST_NAME, CUST_LAST_NAME, WAREHOUSE_NAME
FROM A_CUSTOMERS
         NATURAL JOIN A_ORDERS NATURAL
         NATURAL JOIN A_ORDER_ITEMS
         NATURAL JOIN
     A_PRODUCT_INFORMATION
         NATURAL JOIN A_INVENTORIES
         NATURAL JOIN A_WAREHOUSES
WHERE WAREHOUSE_NAME = 'New Jersey'
  AND CATEGORY_ID = 39
  AND ORDER_DATE BETWEEN TO_DATE('2000-10-01', 'yyyy-MM-dd') AND TO_DATE('2000-12-31', 'yyyy-MM-dd');

SELECT PRODUCT_ID, PRODUCT_NAME, PRODUCT_STATUS, WAREHOUSE_ID, QUANTITY_ON_HAND
FROM A_PRODUCT_INFORMATION
         NATURAL JOIN
     (SELECT PRODUCT_ID, WAREHOUSE_ID, QUANTITY_ON_HAND FROM A_INVENTORIES WHERE QUANTITY_ON_HAND < 20)
WHERE PRODUCT_NAME LIKE 'HD%';

SELECT CUST_FIRST_NAME, CUST_LAST_NAME, CUST_EMAIL
FROM A_CUSTOMERS
         NATURAL JOIN A_ORDERS
WHERE ORDER_TOTAL > 100000
  AND ORDER_ID IN (SELECT ORDER_ID FROM A_ORDER_ITEMS GROUP BY ORDER_ID HAVING SUM(QUANTITY) < 100);

SELECT ORDER_ID, ORDER_DATE, ORDER_MODE
FROM A_ORDERS
WHERE ORDER_DATE < TO_DATE('2000-01-01', 'yyyy-MM-dd')
  AND ORDER_ID IN (SELECT ORDER_ID
                   FROM A_ORDER_ITEMS
                            NATURAL JOIN A_PRODUCT_INFORMATION
                   WHERE UNIT_PRICE < 400
                     AND PRODUCT_NAME LIKE 'Battery%');

CREATE OR REPLACE VIEW DIRECT_ORDERS
AS
SELECT CUST_LAST_NAME, ORDER_ID, ORDER_TOTAL, QUANTITY
FROM A_CUSTOMERS
         NATURAL JOIN A_ORDERS
         NATURAL JOIN
     (SELECT ORDER_ID, SUM(QUANTITY) AS QUANTITY FROM A_ORDER_ITEMS GROUP BY ORDER_ID)
WHERE ORDER_DATE > TO_DATE('01-NOV-20', 'DD-MON-YY')
   OR ORDER_MODE = 'direct' AND QUANTITY > 190;

CREATE OR REPLACE VIEW ORDER_TOT_AUG
AS
SELECT ORDER_ID, ORDER_DATE, SUM(ORDER_TOTAL) AS SUM_TOTAL
FROM A_ORDERS
WHERE ORDER_DATE BETWEEN TO_DATE('2020-08-01', 'yyyy-MM-dd') AND TO_DATE('2020-08-31', 'yyyy-MM-dd')
GROUP BY ORDER_ID, ORDER_DATE
HAVING SUM(ORDER_TOTAL) > 30000;